*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 1rem;
  font-size: 1.125rem;
  font-family: system-ui, sans-serif;
  line-height: 1.5;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.25;
}

/* Normalise input fonts */
input,
textarea {
  font: inherit;
}

fieldset {
  margin: 0;
}

/* Reset list styles */
ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

/* Space list items */
ul > li + li {
  margin-top: 0.5em;
}

/* Center main content */
main {
  max-width: 64rem;
  margin-left: auto;
  margin-right: auto;
}

.error-box {
  padding: 1rem;
  border: 0.12em solid #d52222;
}

.error-box h2 {
  margin-top: 0;
}

.error-box a,
.error-box a:visited {
  color: #d52222;
  font-weight: 600;
}

form button {
  margin-top: 1em;
  padding: 0.5em 1em;
  min-width: 44px;
  min-height: 44px;
  color: #fff;
  background-color: #277cb2;
  border: none;
  border-radius: 0.2em;
  font-size: 1em;
  font-weight: 600;
  text-align: center;
  box-shadow: none;
  cursor: pointer;
  transition: background-color 0.12s ease-in-out;
}

form button:hover {
  background-color: #1f638e;
}

form button:active {
  background-color: #184d6f;
}

/* Custom Radio button Styling from Adrian Roselli
  @see http://adrianroselli.com/2017/05/under-engineered-custom-radio-buttons-and-checkboxen.html 
  The gist of this techinque is:
    - Include input type=radio and a label, explictly associated via `id` and `for`
    - Hide the input visually (but not with display:none; we should 
      keep it in the DOM for Assistive Technologies and people that use them)
    - Restyle via pseudo-elements

  There are a few nuances for Windows High-Contrast Mode and Right-to-left (RTL) support
  RTL is important if someone uses Google Translate, even if our own site is not RTL.

  The benefit of using native radio buttons is that we do not need to re-implement them
  in Elm/JS. Those implementations take more work than the CSS, but different people may disagree.

  An alternative post is that by Scott O'Hara:
  https://scottaohara.github.io/a11y_styled_form_controls/src/radio-button/
*/
form {
  background-color: #fff;
}

form div {
  box-sizing: border-box;
  position: relative;
}

form > div,
form fieldset > div {
  margin: 1.5em 0;
}

form fieldset > div:first-of-type {
  margin-top: 1em;
}

form fieldset > div:last-of-type {
  margin-bottom: 1em;
}

fieldset {
  border: 0.1em solid rgba(0, 0, 0, 0.15);
}
input[type="radio"],
input[type="checkbox"] {
  position: absolute;
  top: auto;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  width: 1px;
  height: 1px;
  white-space: nowrap;
}

input[type="radio"] + label,
input[type="checkbox"] + label {
  display: block;
  padding: 0.5em;
  padding-left: 2em;
  max-width: calc(100% - 2em);
}

fieldset > div input[type="radio"] + label {
  margin: -1em 0;
}

input[type="radio"]:focus + label,
input[type="checkbox"]:focus + label {
  color: #277cb2;
  outline: 1px dotted #277cb2;
}

input[type="radio"] + label::before,
input[type="checkbox"] + label::before {
  content: "";
  background: #fff;
  border: 0.1em solid rgba(0, 0, 0, 0.75);
  background-color: rgba(255, 255, 255, 0.8);
  display: block;
  box-sizing: border-box;
  float: left;
  width: 1em;
  height: 1em;
  margin-left: -1.5em;
  margin-top: 0.15em;
  vertical-align: top;
  cursor: pointer;
  text-align: center;
  transition: all 0.1s ease-out;
}

input[type="radio"] + label::before {
  border-radius: 100%;
}

input[type="radio"]:disabled + label::before,
input[type="checkbox"]:disabled + label::before {
  border: 0.1em solid rgba(0, 0, 0, 0.1);
  background-color: rgba(0, 0, 0, 0.1);
}

input[type="radio"]:disabled + label,
input[type="checkbox"]:disabled + label {
  color: #ccc;
}

input[type="radio"]:checked + label::before {
  background-color: #277cb2;
  box-shadow: inset 0 0 0 0.15em rgba(255, 255, 255, 0.95);
}

/* RTL */

*[dir="rtl"] input[type="radio"] + label,
*[dir="rtl"] input[type="checkbox"] + label {
  padding-left: 0.5em;
  padding-right: 2em;
}

*[dir="rtl"] input[type="radio"] + label::before,
*[dir="rtl"] input[type="checkbox"] + label::before {
  float: right;
  margin-left: 0;
  margin-right: -1.5em;
}

/* Windows High-Contrast mode (WHCM) */

@media screen and (-ms-high-contrast: active) {
  /* Need to create an element because no shadows in WHCM */
  /* -ms-high-contrast-adjust: none; does not do what we need */
  input[type="radio"] + label::after {
    display: block;
    content: "";
    position: absolute;
    top: 1.05em;
    left: 0.9em;
    width: 0.2em;
    height: 0.2em;
    border: none;
    border-radius: 50%;
    background-color: transparent;
    transition: all 0.1s ease-out;
  }
  input[type="radio"]:checked + label::after {
    top: 0.85em;
    left: 0.7em;
    width: 0.6em;
    height: 0.6em;
    background-color: windowText;
  }
  *[dir="rtl"] input[type="radio"] + label::after {
    left: auto;
    right: 0.9em;
  }
  *[dir="rtl"] input[type="radio"]:checked + label::after {
    left: auto;
    right: 0.7em;
  }
  input[type="checkbox"]:disabled + label,
  input[type="checkbox"]:disabled:checked + label::after,
  input[type="radio"]:disabled + label {
    color: grayText;
    cursor: not-allowed;
    border-right-color: grayText;
    border-bottom-color: grayText;
  }
}
